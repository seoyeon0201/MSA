apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-msa-config
data:
  redis-config: "requirepass password" #저장할 [key]:[value]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-msa-ui
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: 115.68.198.240:30002/cowork-msa/front:latest
          command: ["nginx", "-g", "daemon off;"]
          env: #환경 변수 설정
            - name: MASTER
              value: "true"
          ports:
            - containerPort: 80
          # resources: #리소스 제한 설정
          #   limits:
          #     cpu: "0.1"
          resources:
            limits:
              cpu: "0.3"
              memory: 2000Mi
            requests:
              cpu: "0.2"
              memory: 1500Mi
          volumeMounts: #컨테이너에 볼륨마운트할 위치 설정
            - mountPath: /redis-master-data
              name: data
            - mountPath: /redis-master
              name: config
      imagePullSecrets:
        - name: cowork-msa-secret
      volumes: #pod에 제공할 볼륨 지정
        - name: data
          emptyDir: {} #emptyDir: pod 생성시 생성되는 임시 볼륨
        - name: config
          configMap:
            name: redis-msa-config #mount하려는 configMap의 이름 지정
            items: #configMap에서 파일로 생성할 key 배열
              - key: redis-config
                path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: redis-msa-ui
  labels:
    app: redis
spec:
  ports:
    - nodePort: 30060
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: redis
  type: NodePort
